{"version":3,"file":"switchboard.test.js","names":["SingletonSwitchboard","Switchboard","FakeMessagePort","constructor","otherPort","isStarted","queue","listeners","Set","onmessage","onmessageerror","dispatchEvent","event","forEach","listener","err","push","addEventListener","eventType","handler","add","removeEventListener","delete","postMessage","data","start","close","__reactstandin__regenerateByEval","key","code","eval","FakeMessageChannel","port1","port2","describe","originalConsoleDebug","originalConsoleError","beforeAll","Object","defineProperty","global","value","console","debug","error","beforeEach","jest","fn","afterEach","it","sb","port","MessageChannel","expect","not","toBeNull","toHaveProperty","toHaveBeenCalledWith","emit","get","rejects","toThrow","init","channel","ours","name","theirs","defineMethod","Promise","_setImmediate","toHaveBeenCalled","x","resolve","toEqual","promise","value1","value2","all","Error","messageId","toHaveBeenCalledTimes","mock","calls","toBe","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../src/switchboard.test.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport SingletonSwitchboard, { Switchboard } from './switchboard';\n\ntype EventHandler = (event: MessageEvent) => void;\n\n// A note on these fakes:\n//\n// jsdom doesn't supply a MessageChannel or a MessagePort,\n// so we have to build our own unless we want to unit test in-browser.\n// Might want to open a PR in jsdom: https://github.com/jsdom/jsdom/issues/2448\n\n/** Matches the MessagePort api as closely as necessary (it's a small api) */\nclass FakeMessagePort {\n  otherPort?: FakeMessagePort;\n\n  isStarted = false;\n\n  queue: MessageEvent[] = [];\n\n  listeners: Set<EventHandler> = new Set();\n\n  dispatchEvent(event: MessageEvent) {\n    if (this.isStarted) {\n      this.listeners.forEach(listener => {\n        try {\n          listener(event);\n        } catch (err) {\n          if (typeof this.onmessageerror === 'function') {\n            this.onmessageerror(err);\n          }\n        }\n      });\n    } else {\n      this.queue.push(event);\n    }\n    return true;\n  }\n\n  addEventListener(eventType: 'message', handler: EventHandler) {\n    this.listeners.add(handler);\n  }\n\n  removeEventListener(eventType: 'message', handler: EventHandler) {\n    this.listeners.delete(handler);\n  }\n\n  postMessage(data: any) {\n    this.otherPort!.dispatchEvent({ data } as MessageEvent);\n  }\n\n  start() {\n    if (this.isStarted) return;\n    this.isStarted = true;\n    this.queue.forEach(event => {\n      this.dispatchEvent(event);\n    });\n    this.queue = [];\n  }\n\n  close() {\n    this.isStarted = false;\n  }\n\n  onmessage: EventHandler | null = null; // not implemented, requires some kinda proxy thingy to mock correctly\n\n  onmessageerror: ((err: any) => void) | null = null;\n}\n\n/** Matches the MessageChannel api as closely as necessary (an even smaller api than MessagePort) */\nclass FakeMessageChannel {\n  port1: MessagePort;\n\n  port2: MessagePort;\n\n  constructor() {\n    const port1 = new FakeMessagePort();\n    const port2 = new FakeMessagePort();\n    port1.otherPort = port2;\n    port2.otherPort = port1;\n    this.port1 = port1;\n    this.port2 = port2;\n  }\n}\n\ndescribe('comms', () => {\n  let originalConsoleDebug: any = null;\n  let originalConsoleError: any = null;\n\n  beforeAll(() => {\n    Object.defineProperty(global, 'MessageChannel', {\n      value: FakeMessageChannel,\n    });\n    originalConsoleDebug = console.debug;\n    originalConsoleError = console.error;\n  });\n\n  beforeEach(() => {\n    console.debug = jest.fn(); // silencio bruno\n    console.error = jest.fn();\n  });\n\n  afterEach(() => {\n    console.debug = originalConsoleDebug;\n    console.error = originalConsoleError;\n  });\n\n  it('constructs with defaults', () => {\n    const sb = new Switchboard({ port: new MessageChannel().port1 });\n    expect(sb).not.toBeNull();\n    expect(sb).toHaveProperty('name');\n    expect(sb).toHaveProperty('debugMode');\n  });\n\n  it('singleton', async () => {\n    SingletonSwitchboard.start();\n    expect(console.error).toHaveBeenCalledWith(\n      '[]',\n      'Switchboard not initialised',\n    );\n    SingletonSwitchboard.emit('someEvent', 42);\n    expect(console.error).toHaveBeenCalledWith(\n      '[]',\n      'Switchboard not initialised',\n    );\n    await expect(SingletonSwitchboard.get('failing')).rejects.toThrow(\n      'Switchboard not initialised',\n    );\n    SingletonSwitchboard.init({ port: new MessageChannel().port1 });\n    expect(SingletonSwitchboard).toHaveProperty('name');\n    expect(SingletonSwitchboard).toHaveProperty('debugMode');\n    SingletonSwitchboard.init({ port: new MessageChannel().port1 });\n    expect(console.error).toHaveBeenCalledWith(\n      '[switchboard]',\n      'already initialized',\n    );\n  });\n\n  describe('emit', () => {\n    it('triggers the method', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      const handler = jest.fn();\n\n      theirs.defineMethod('someEvent', handler);\n      theirs.start();\n\n      ours.emit('someEvent', 42);\n\n      expect(handler).toHaveBeenCalledWith(42);\n    });\n\n    it('handles a missing method', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.start();\n      channel.port2.onmessageerror = jest.fn();\n      ours.emit('fakemethod');\n      await new Promise(setImmediate);\n      expect(channel.port2.onmessageerror).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('get', () => {\n    it('returns the value', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.defineMethod('theirMethod', ({ x }: { x: number }) =>\n        Promise.resolve(x + 42),\n      );\n      theirs.start();\n\n      const value = await ours.get('theirMethod', { x: 1 });\n\n      expect(value).toEqual(43);\n    });\n\n    it('removes the listener after', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.defineMethod('theirMethod', () => Promise.resolve(420));\n      theirs.start();\n\n      expect((channel.port1 as FakeMessagePort).listeners).toHaveProperty(\n        'size',\n        1,\n      );\n      const promise = ours.get('theirMethod');\n      expect((channel.port1 as FakeMessagePort).listeners).toHaveProperty(\n        'size',\n        2,\n      );\n      await promise;\n      expect((channel.port1 as FakeMessagePort).listeners).toHaveProperty(\n        'size',\n        1,\n      );\n    });\n\n    it('can handle one way concurrency', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.defineMethod('theirMethod', () => Promise.resolve(42));\n      theirs.defineMethod(\n        'theirMethod2',\n        () => new Promise(resolve => setImmediate(() => resolve(420))),\n      );\n      theirs.start();\n\n      const [value1, value2] = await Promise.all([\n        ours.get('theirMethod'),\n        ours.get('theirMethod2'),\n      ]);\n\n      expect(value1).toEqual(42);\n      expect(value2).toEqual(420);\n    });\n\n    it('can handle two way concurrency', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.defineMethod('theirMethod', () => Promise.resolve(42));\n      ours.defineMethod(\n        'ourMethod',\n        () => new Promise(resolve => setImmediate(() => resolve(420))),\n      );\n      theirs.start();\n\n      const [value1, value2] = await Promise.all([\n        ours.get('theirMethod'),\n        theirs.get('ourMethod'),\n      ]);\n\n      expect(value1).toEqual(42);\n      expect(value2).toEqual(420);\n    });\n\n    it('handles when the method is not defined', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.start();\n      await expect(ours.get('fakemethod')).rejects.toThrow(\n        '[theirs] Method \"fakemethod\" is not defined',\n      );\n    });\n\n    it('handles when the method throws', async () => {\n      const channel = new MessageChannel();\n      const ours = new Switchboard({ port: channel.port1, name: 'ours' });\n      const theirs = new Switchboard({ port: channel.port2, name: 'theirs' });\n      theirs.defineMethod('failing', () => {\n        throw new Error('i dont feel like writing a clever message here');\n      });\n      theirs.start();\n\n      console.error = jest.fn(); // will be restored by the afterEach\n      await expect(ours.get('failing')).rejects.toThrow(\n        '[theirs] Method \"failing\" threw an error',\n      );\n    });\n\n    it('handles receiving an unexpected non-reply, non-error response', async () => {\n      const { port1, port2 } = new MessageChannel();\n      const ours = new Switchboard({ port: port1, name: 'ours' });\n      // This test is required for 100% coverage. But there's no way to set up these conditions\n      // within the switchboard interface, so we gotta hack together the ports directly.\n      port2.addEventListener('message', event => {\n        const { messageId } = event.data;\n        port1.dispatchEvent({ data: { messageId } } as MessageEvent);\n      });\n      port2.start();\n\n      await expect(ours.get('someMethod')).rejects.toThrow(\n        'Unexpected response message',\n      );\n    });\n  });\n\n  it('logs in debug mode', async () => {\n    const { port1, port2 } = new MessageChannel();\n    const ours = new Switchboard({\n      port: port1,\n      name: 'ours',\n      debug: true,\n    });\n    const theirs = new Switchboard({\n      port: port2,\n      name: 'theirs',\n      debug: true,\n    });\n    theirs.defineMethod('blah', () => {});\n    theirs.start();\n    await ours.emit('blah');\n    expect(console.debug).toHaveBeenCalledTimes(1);\n    expect((console.debug as any).mock.calls[0][0]).toBe('[theirs]');\n  });\n\n  it('does not log outside debug mode', async () => {\n    const { port1, port2 } = new MessageChannel();\n    const ours = new Switchboard({\n      port: port1,\n      name: 'ours',\n    });\n    const theirs = new Switchboard({\n      port: port2,\n      name: 'theirs',\n    });\n    theirs.defineMethod('blah', () => {});\n    theirs.start();\n    await ours.emit('blah');\n    expect(console.debug).toHaveBeenCalledTimes(0);\n  });\n});\n"],"mappings":"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","ignoreList":[]}